2021-02-15 15:57:50,979 [      0][Idea Main Thread]   INFO -        #com.intellij.idea.Main - ------------------------------------------------------ IDE STARTED ------------------------------------------------------ 
2021-02-15 15:57:51,209 [    230][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - IDE: IntelliJ IDEA (build #IJCA-203.7568, 10 Feb 2021 20:17) 
2021-02-15 15:57:51,236 [    257][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - OS: Linux (5.4.0-1039-azure, amd64) 
2021-02-15 15:57:51,264 [    285][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - JRE: 11.0.10+9-LTS (Amazon.com Inc.) 
2021-02-15 15:57:51,265 [    286][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - JVM: 11.0.10+9-LTS (OpenJDK 64-Bit Server VM) 
2021-02-15 15:57:51,268 [    289][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - JVM Args: -XX:ReservedCodeCacheSize=350m -XX:SoftRefLRUPolicyMSPerMB=5 -ea -XX:CICompilerCount=2 -Dsun.io.useCanonPrefixCache=false -Djdk.http.auth.tunneling.disabledSchemes= -XX:+HeapDumpOnOutOfMemoryError -XX:-OmitStackTraceInFastThrow -Djdk.attach.allowAttachSelf=true -Dkotlinx.coroutines.debug=off -Djdk.module.illegalAccess.silent=true -XX:MaxJavaStackTraceDepth=10000 -Dsun.tools.attach.tmp.only=true -XX:+UseG1GC -XX:MaxRAMPercentage=70 -Xlog:gc*:/github/workspace/qodana/log/gc.log -Didea.config.path=/root/.config/idea -Didea.system.path=/root/.cache/idea -XX:HeapDumpPath=/github/workspace/qodana/log/OOMheapdump.hprof -XX:ErrorFile=/github/workspace/qodana/log/java_error_in_IDEA.log -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Didea.is.internal=true -Djava.awt.headless=true -Didea.headless.enable.statistics=true -Didea.headless.statistics.device.id=200820300000000-fbba-a70a-a25f-ed9643dccc15 -Didea.log.config.file=/opt/idea/bin/log.xml -Didea.log.path=/github/workspace/qodana/log/ -Dqodana.gradle.extra.command.line.args=--info -Didea.headless.statistics.salt=59c83051f7e745beb7e6d9f32d98739c -Didea.vendor.name=JetBrains -Didea.paths.selector=IntelliJIdea2020.3 -Djb.vmOptionsFile=/opt/idea/bin/idea64.vmoptions -Didea.jre.check=true 
2021-02-15 15:57:51,268 [    289][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - library path: /usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib 
2021-02-15 15:57:51,268 [    289][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - boot library path: /usr/lib/jvm/java-11-amazon-corretto/lib 
2021-02-15 15:57:51,337 [    358][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - locale=en JNU=UTF-8 file.encoding=UTF-8
  idea.config.path=/root/.config/idea
  idea.system.path=/root/.cache/idea
  idea.plugins.path=/root/.config/idea/plugins
  idea.log.path=/github/workspace/qodana/log 
2021-02-15 15:57:51,437 [    458][ApplicationImpl pooled thread 3]   INFO -        #com.intellij.idea.Main - JNA library (64-bit) loaded in 100 ms 
2021-02-15 15:57:51,906 [    927][AWT-EventQueue-0]   INFO - ntellij.idea.ApplicationLoader - CPU cores: 2; ForkJoinPool.commonPool: java.util.concurrent.ForkJoinPool@1b37a887[Running, parallelism = 2, size = 0, active = 0, running = 0, steals = 0, tasks = 0, submissions = 0]; factory: com.intellij.concurrency.IdeaForkJoinWorkerThreadFactory@2a4fef26 
2021-02-15 15:57:52,624 [   1645][ApplicationImpl pooled thread 1]   INFO - llij.ide.plugins.PluginManager - Loaded bundled plugins: IDEA CORE (203.7568), com.intellij.platform.images (203.7568), JetBrains maven model api classes (203.7568), JetBrains Repository Search (203.7568), HTML Tools (203.7568), XPathView + XSLT (203.7568), CSS (203.7568), W3C Validators (203.7568), Java (203.7568), JUnit (203.7568), Spring AOP/@AspectJ (203.7568), Java IDE Customization (203.7568), Microservices UAST (203.7568), Eclipse Interoperability (203.7568), Properties (203.7568), Ant (203.7568), UML (203.7568), Gradle (203.7568), Guice (203.7568), Java Internationalization (203.7568), UI Designer (203.7568), Microservices Application Configuration (203.7568), Velocity (203.7568), IntelliLang (203.7568), TestNG (203.7568), Database Tools and SQL (203.7568), Persistence Frameworks (203.7568), Groovy (203.7568), Maven (203.7568), Gradle-Java (203.7568), Plugin DevKit (203.7568), Gradle Extension (203.7568), Frameworks Starters (203.7568), Java EE Platform (203.7568), Java EE: Bean Validation (203.7568), Java EE: Contexts and Dependency Injection (CDI) (203.7568), Java EE: Persistence (JPA) (203.7568), Hibernate (203.7568), Java EE: Application Servers (203.7568), WebLogic (203.7568), Java EE: Web/Servlets (203.7568), Java Server Pages (JSP) (203.7568), Spring (203.7568), Spring Security (203.7568), Spring Data (203.7568), Java EE: Web Services (JAX-WS) (203.7568), Spring Web Services (203.7568), FreeMarker (203.7568), Spring MVC (203.7568), Spring Web Flow (203.7568), Spring Batch (203.7568), Spring Messaging (203.7568), Spring Integration Patterns (203.7568), Spring Boot (203.7568), Spring WebSocket (203.7568), Spring OSGi (203.7568), Maven Extension (203.7568), Kotlin (203-1.4.10-release-IJ7148.5), Feature Usage Statistics (1.0.0), PHP (203.7568), Static Analysis Project (203.7568) 
2021-02-15 15:57:52,625 [   1646][ApplicationImpl pooled thread 1]   INFO - llij.ide.plugins.PluginManager - Disabled plugins: Drools (203.7568), EditorConfig (203.7568), Java EE: Enterprise Java Beans (EJB) (203.7568), CoffeeScript (203.7568), Perforce (203.7568), Recommenders for Java and Python (203.7568), Emoji Picker (203.7568), Java EE: Batch Applications (203.7568), Configuration Script (203.7568), JBoss Frameworks Base (203.7568), GlassFish (203.7568), Java EE: Message Service (JMS) (203.7568), Shell Script (203.7568), Java EE: RESTful Web Services (JAX-RS) (203.7568), Java SQL Libraries (203.7568), Git (203.7568), Tomcat and TomEE (203.7568), JavaFX (203.7568), AspectJ (203.7568), Angular and AngularJS (203.7568), TSLint (203.7568), YAML (203.7568), Java EE: Server Faces (JSF) (203.7568), Subversion (203.7568), Java EE: Gradle Integration (203.7568), Quarkus (203.7568), Markdown (203.7568), Emma (203.7568), WildFly (203.7568), XSLT Debugger (203.7568), Shared Indexes (203.7568), IDE Features Trainer (203.7568), Refactor-X (203.7568), Arquillian (203.7568), Bytecode Viewer (203.7568), Spy-js (203.7568), Java EE: WebSockets (203.7568), Machine Learning Code Completion (203.7568), TextMate Bundles (203.7568), Time Tracking (203.7568), WebP Support (203.7568), WebSphere (203.7568), Java HTTP Clients (203.7568), Jetty (203.7568), Thymeleaf (203.7568), JavaScript Debugger (203.7568), OpenAPI Specifications (203.7568), Code Coverage for Java (203.7568), Less (203.7568), Gradle Dependency Updater Implementation (203.7568), Grazie (203.7568), Gradle DSL Implementation For Kotlin (203.7568), Terminal (203.7568), Dependency Structure Matrix (203.7568), Smali Support (203.7568), JavaScript Intention Power Pack (203.7568), Debugger Support for JSP (JSR45) (203.7568), Gradle DSL API (203.7568), Node.js (203.7568), Lombok (203.7568), Reactive Streams (Reactor, RxJava) (203.7568), HTTP Client (203.7568), Gherkin (203.7568), FTP/SFTP Connectivity (ex. Remote Hosts Access) (203.7568), Stylus (203.7568), Micronaut (203.7568), ZKM-Unscramble (203.7568), Java Bytecode Decompiler (203.7568), IDE Settings Sync (203.7568), Cucumber for Java (203.7568), Helidon (203.7568), Mercurial (203.7568), Settings Repository (203.7568), Java Stream Debugger (203.7568), Dependency Management Api for External Build Tools (203.7568), Copyright (203.7568), SSH Remote Run (203.7568), Haml (203.7568), Next File Prediction (203.7568), JavaScript and TypeScript (203.7568), Sass (203.7568), Cucumber for Groovy (203.7568), Task Management (203.7568), Gradle-Maven (203.7568), Grails (203.7568), Resource Bundle Editor (203.7568) 
2021-02-15 15:57:52,700 [   1721][ApplicationImpl pooled thread 1]   INFO - spection.InspectionApplication - Command line arguments: [inspect, /github/workspace, /data/profile.xml, /github/workspace/qodana, -v3, -format, sa, -qodana] 
2021-02-15 15:57:53,139 [   2160][ApplicationImpl pooled thread 3]   INFO - m.intellij.util.io.StorageLock - lower=100; upper=500; buffer=10; max=4850 
2021-02-15 15:57:53,184 [   2205][DirectBufferWrapper allocation thread]   INFO - tellij.util.io.FileChannelUtil - uninterruptible FileChannels will be used for indexes 
2021-02-15 15:57:53,216 [   2237][ApplicationImpl pooled thread 1]   INFO - om.intellij.ui.scale.JBUIScale - System scale factor: 1.0 (IDE-managed HiDPI) 
2021-02-15 15:57:53,243 [   2264][AWT-EventQueue-0]   WARN - pi.util.registry.RegistryValue - Attempt to load key 'ide.prioritize.threads' for not yet loaded registry 
java.lang.Throwable
	at com.intellij.openapi.util.registry.RegistryValue._get(RegistryValue.java:226)
	at com.intellij.openapi.util.registry.RegistryValue.get(RegistryValue.java:203)
	at com.intellij.openapi.util.registry.RegistryValue.calcBoolean(RegistryValue.java:69)
	at com.intellij.openapi.util.registry.RegistryValue.asBoolean(RegistryValue.java:62)
	at com.intellij.openapi.util.registry.Registry.is(Registry.java:63)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:761)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:57:53,709 [   2730][ApplicationImpl pooled thread 2]   INFO - til.net.ssl.CertificateManager - Default SSL context initialized 
2021-02-15 15:57:53,966 [   2987][ApplicationImpl pooled thread 1]   WARN - j.internal.DebugAttachDetector - Unable to start DebugAttachDetector, please add `--add-exports java.base/jdk.internal.vm=ALL-UNNAMED` to VM options 
2021-02-15 15:57:54,056 [   3077][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Starting up IntelliJ IDEA 2020.3.3 (build IJCA-203.7568) ...done. 
2021-02-15 15:57:54,157 [   3178][File Watcher[ApplicationImpl pooled thread 5]]   INFO - pl.local.NativeFileWatcherImpl - Native file watcher is disabled 
2021-02-15 15:57:54,284 [   3305][ApplicationImpl pooled thread 5]   INFO - rains.ide.BuiltInServerManager - built-in server started, port 63342 
2021-02-15 15:57:54,650 [   3671][ApplicationImpl pooled thread 3]   INFO - pi.util.registry.RegistryValue - Registry value 'unknown.sdk.auto' has changed to 'false' 
2021-02-15 15:57:54,650 [   3671][ApplicationImpl pooled thread 3]   INFO - pi.util.registry.RegistryValue - Registry value 'external.system.auto.import.disabled' has changed to 'true' 
2021-02-15 15:57:55,648 [   4669][AWT-EventQueue-0]   INFO - rationStore.ComponentStoreImpl - Saving default projectDaemonCodeAnalyzer took 11 ms, NamedScopeManager took 17 ms 
2021-02-15 15:57:55,692 [   4713][ApplicationImpl pooled thread 3]   INFO - BridgeProjectLifecycleListener - Using workspace model to open project 
2021-02-15 15:57:55,984 [   5005][ApplicationImpl pooled thread 6]   INFO - rojectCodeStyleSettingsManager - Initialized from default code style settings. 
2021-02-15 15:57:56,135 [   5156][ApplicationImpl pooled thread 3]   INFO - on.JpsProjectModelSynchronizer - Workspace model loaded without cache. Loading real project state into workspace model. Thread[ApplicationImpl pooled thread 3,4,Idea Thread Group] 
2021-02-15 15:57:57,555 [   6576][IndexInfrastructure Pool[ApplicationImpl pooled thread 2]]   INFO - leBasedIndexDataInitialization - Initialization done: 3527 
2021-02-15 15:57:57,740 [   6761][IndexInfrastructure Pool[ApplicationImpl pooled thread 2]]   INFO - exImpl$StubIndexInitialization - Initialization done: 178 
2021-02-15 15:57:57,857 [   6878][ApplicationImpl pooled thread 3]   INFO - llij.database.util.SqlDialects - SQL dialects initialized in 1 ms 
2021-02-15 15:57:58,958 [   7979][ApplicationImpl pooled thread 3]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1389ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:57:59,682 [   8703][ApplicationImpl pooled thread 3]   INFO - ndex.PrebuiltIndexProviderBase - Prebuilt id-index indices are missing for PHP 
2021-02-15 15:58:00,481 [   9502][ApplicationImpl pooled thread 3]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 1523ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:58:00,876 [   9897][ApplicationImpl pooled thread 3]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 5436 files to index 
2021-02-15 15:58:00,895 [   9916][ApplicationImpl pooled thread 3]   INFO - indexing.UnindexedFilesUpdater - Using 2 threads for indexing 
2021-02-15 15:58:02,043 [  11064][Indexing[ApplicationImpl pooled thread 2]]   INFO - ndex.PrebuiltIndexProviderBase - Prebuilt sdk-stubs indices are missing for PHP 
2021-02-15 15:58:14,219 [  23240][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#M#C\Closure.__invoke∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,221 [  23242][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,222 [  23243][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,223 [  23244][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,224 [  23245][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,234 [  23255][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,236 [  23257][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#M#C\callable.__invoke∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, \float, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, \int, \bool, \array, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,236 [  23257][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,236 [  23257][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,237 [  23258][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,237 [  23258][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,237 [  23258][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,237 [  23258][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,237 [  23258][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,238 [  23259][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,238 [  23259][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,238 [  23259][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,239 [  23260][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,239 [  23260][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,239 [  23260][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,240 [  23261][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,245 [  23266][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,246 [  23267][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,247 [  23268][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,248 [  23269][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,248 [  23269][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,256 [  23277][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,256 [  23277][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,257 [  23278][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,257 [  23278][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,257 [  23278][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,257 [  23278][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,258 [  23279][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,259 [  23280][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,260 [  23281][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,261 [  23282][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,262 [  23283][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,263 [  23284][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,264 [  23285][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,264 [  23285][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,273 [  23294][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,273 [  23294][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,274 [  23295][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,274 [  23295][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,274 [  23295][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,275 [  23296][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,276 [  23297][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,277 [  23298][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,277 [  23298][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,277 [  23298][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,277 [  23298][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,288 [  23309][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,288 [  23309][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,288 [  23309][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,288 [  23309][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,288 [  23309][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,289 [  23310][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,290 [  23311][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,290 [  23311][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,290 [  23311][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,292 [  23313][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,292 [  23313][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,292 [  23313][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,292 [  23313][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,292 [  23313][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,293 [  23314][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,293 [  23314][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,293 [  23314][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,294 [  23315][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,294 [  23315][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,294 [  23315][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,294 [  23315][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,295 [  23316][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,295 [  23316][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,296 [  23317][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,296 [  23317][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,297 [  23318][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,298 [  23319][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,299 [  23320][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,299 [  23320][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,299 [  23320][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,299 [  23320][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,300 [  23321][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,301 [  23322][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,302 [  23323][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,303 [  23324][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,304 [  23325][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,305 [  23326][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,305 [  23326][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,305 [  23326][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,305 [  23326][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,305 [  23326][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,312 [  23333][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,313 [  23334][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,314 [  23335][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,314 [  23335][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \array, \bool, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,318 [  23339][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #M#C\Closure.__invoke, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#M#C\callable.__invoke∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, \float, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, \array, \bool, \int, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,320 [  23341][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,320 [  23341][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,320 [  23341][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,321 [  23342][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,321 [  23342][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,321 [  23342][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,321 [  23342][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,322 [  23343][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,322 [  23343][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,322 [  23343][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,322 [  23343][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,326 [  23347][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,326 [  23347][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,326 [  23347][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,326 [  23347][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,327 [  23348][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,328 [  23349][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,329 [  23350][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,330 [  23351][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,331 [  23352][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,331 [  23352][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,331 [  23352][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,331 [  23352][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,334 [  23355][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,334 [  23355][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,334 [  23355][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, \array, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value} 
2021-02-15 15:58:14,334 [  23355][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, \array, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #M#C\callable.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, \array, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #M#C\callable.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, \array, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,335 [  23356][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,336 [  23357][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,337 [  23358][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,337 [  23358][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,337 [  23358][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,337 [  23358][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,337 [  23358][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,339 [  23360][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,339 [  23360][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,340 [  23361][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,341 [  23362][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,342 [  23363][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,344 [  23365][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,344 [  23365][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,345 [  23366][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,346 [  23367][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,347 [  23368][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,347 [  23368][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,347 [  23368][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,347 [  23368][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,347 [  23368][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,350 [  23371][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,350 [  23371][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,350 [  23371][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,350 [  23371][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,351 [  23372][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,352 [  23373][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,353 [  23374][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,354 [  23375][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,354 [  23375][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,354 [  23375][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,354 [  23375][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,354 [  23375][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,355 [  23376][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,355 [  23376][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,355 [  23376][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,356 [  23377][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,357 [  23378][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,358 [  23379][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #M#C\Closure.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#M#C\callable.__invoke∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \bool, \string, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #M#C\Closure.__invoke, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, \null, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, \mixed, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #M#C\callable.__invoke, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, \array, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \bool, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \int, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n} 
2021-02-15 15:58:14,359 [  23380][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,360 [  23381][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,360 [  23381][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,360 [  23381][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,360 [  23381][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,360 [  23381][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,361 [  23382][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,362 [  23383][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,362 [  23383][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,362 [  23383][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,362 [  23383][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,362 [  23383][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate, #E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var, #M#C\Closure.__invoke, \null, #-#M#C\callable.__invoke∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #-#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #M#C\callable.__invoke, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #-#E#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateConstFetch≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr, \int, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n∆n, \array, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right∆n, #-#E#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Expr\ArrayDimFetch.var±#P#-\PhpParser\Node\Expr\ArrayDimFetch∆c\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value∆n, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.cond∆n, #-#M#C\Closure.__invoke∆n} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,363 [  23384][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,364 [  23385][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,365 [  23386][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,366 [  23387][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,367 [  23388][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,368 [  23389][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,369 [  23390][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,370 [  23391][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,371 [  23392][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,372 [  23393][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,373 [  23394][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,374 [  23395][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,375 [  23396][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,377 [  23398][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,378 [  23399][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:58:14,379 [  23400][Indexing[ApplicationImpl pooled thread 2]]   WARN - lang.psi.resolve.types.PhpType - too much type variants: {#-#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluateBinaryOp≥#C\PhpParser\Node\Expr∆n, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value, #P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\String_.value, #-#E#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\String_.value∆n, #M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke, #-#E#P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #-#E#M#C\Closure.__invoke∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr, #-#E#-#E#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n∆n, \mixed, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n, #E#M#C\PhpParser\ConstExprEvaluator.evaluate, #-#E#M#π#P#C\PhpParser\ConstExprEvaluator.fallbackEvaluator≥ø.__invoke∆n, #-#π#M#C\Closure.__invoke≥#C\PhpParser\Node\Expr\ConstFetch∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value, #π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\DNumber.value, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.right∆n, #P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\DNumber.value, \float, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#M#C\PhpParser\ConstExprEvaluator.evaluate∆n∆n, #M#C\PhpParser\ConstExprEvaluator.evaluate, #-#P#-\PhpParser\Node\Expr∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#E#P#-\PhpParser\Node\Scalar\String_∆c\PhpParser\Node\Scalar\LNumber.value∆n, #-#π#M#C\callable.__invoke≥#C\PhpParser\Node\Expr∆n, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluateArray≥#C\PhpParser\Node\Expr∆n, \bool, #π#M#C\PhpParser\ConstExprEvaluator.evaluateTernary≥#C\PhpParser\Node\Expr, \string, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\LNumber.value∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right±#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.right, #-#E#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#o#P#-\PhpParser\Node\Expr\BinaryOp∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#o#P#-\PhpParser\Node\Expr\BinaryOp\Coalesce∆c\PhpParser\Node\Expr\BinaryOp\Coalesce.left.var±#P#C\PhpParser\Node\Expr\ArrayDimFetch.var∆n, #P#-\PhpParser\Node\Scalar\LNumber∆c\PhpParser\Node\Scalar\String_.value, #-#P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\String_.value∆n, #-#E#-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\BinaryOp.left∆n∆n, #π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.if, #-#π#M#C\PhpParser\ConstExprEvaluator.evaluate≥#P#C\PhpParser\Node\Expr\Ternary.else∆n, #P#-\PhpParser\Node\Scalar\DNumber∆c\PhpParser\Node\Scalar\DNumber.value} 
2021-02-15 15:59:10,906 [  79927][ApplicationImpl pooled thread 3]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 70030ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:10,912 [  79933][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for TodoIndex. requests: 5436, hits: 64, misses: 5372 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for IdIndex. requests: 5436, hits: 64, misses: 5372 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for Trigram.Index. requests: 5436, hits: 64, misses: 5372 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for HashFragmentIndex. requests: 4829, hits: 4, misses: 4825 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for bytecodeAnalysis. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.null.method.argument. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.fun.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:10,913 [  79934][ApplicationImpl pooled thread 3]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.binary.plus.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:10,957 [  79978][ApplicationImpl pooled thread 3]   INFO - spection.InspectionApplication - Waiting for startup activities 
2021-02-15 15:59:11,286 [  80307][ApplicationImpl pooled thread 2]   INFO - ge.ExternalProjectsDataStorage - Load external projects data in 19 millis (read time: 1) 
2021-02-15 15:59:11,681 [  80702][ApplicationImpl pooled thread 8]   INFO - CompilerWorkspaceConfiguration - Available processors: 2 
2021-02-15 15:59:11,775 [  80796][ApplicationImpl pooled thread 2]   INFO - j.ide.script.IdeStartupScripts - 0 startup script(s) found 
2021-02-15 15:59:11,830 [  80851][ApplicationImpl pooled thread 2]   INFO - .diagnostic.PerformanceWatcher - Post-startup activities under progress took 903ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:12,080 [  81101][AWT-EventQueue-0]   INFO - penapi.wm.impl.GlobalMenuLinux - disable global-menu integration because some of shared libraries isn't installed: java.lang.UnsatisfiedLinkError: /opt/idea/bin/libdbm64.so: libdbusmenu-glib.so.4: cannot open shared object file: No such file or directory 
2021-02-15 15:59:12,100 [  81121][AWT-EventQueue-0]   INFO - tartup.impl.StartupManagerImpl - Some post-startup activities freeze UI for noticeable time. Please consider making them DumbAware to run them in background under modal progress, or just making them faster to speed up project opening. 
2021-02-15 15:59:12,282 [  81303][ApplicationImpl pooled thread 7]   INFO - penapi.application.Experiments - Experimental features enabled for user: wsl.p9.support, wsl.p9.show.roots.in.file.chooser, wsl.execute.with.wsl.exe, inline.browse.button, linux.native.menu, recent.and.edited.files.together, show.create.new.element.in.popup, search.everywhere.mixed.results, copy.reference.popup, i18n.match.actions, editor.reader.mode, edit.run.configurations.while.dumb, new.large.text.file.viewer, property.value.inplace.editing 
2021-02-15 15:59:13,174 [  82195][AWT-EventQueue-0]   INFO - ser.lib.ComposerLibraryManager - Updated composer include paths. Add [file:///github/workspace/vendor/symfony/deprecation-contracts, file:///github/workspace/vendor/symfony/string, file:///github/workspace/vendor/symfony/service-contracts, file:///github/workspace/vendor/symfony/mime, file:///github/workspace/vendor/webmozart/assert, file:///github/workspace/vendor/symfony/polyfill-intl-idn, file:///github/workspace/vendor/symfony/polyfill-php80, file:///github/workspace/vendor/symfony/http-client-contracts, file:///github/workspace/vendor/symfony/event-dispatcher, file:///github/workspace/vendor/symfony/error-handler, file:///github/workspace/vendor/symfony/polyfill-ctype, file:///github/workspace/vendor/phpoption/phpoption, file:///github/workspace/vendor/symfony/polyfill-intl-grapheme, file:///github/workspace/vendor/symfony/event-dispatcher-contracts, file:///github/workspace/vendor/symfony/console, file:///github/workspace/vendor/symfony/process, file:///github/workspace/vendor/illuminate/container, file:///github/workspace/vendor/symfony/polyfill-php72, file:///github/workspace/vendor/illuminate/bus, file:///github/workspace/vendor/symfony/polyfill-intl-normalizer, file:///github/workspace/vendor/illuminate/pagination, file:///github/workspace/vendor/symfony/polyfill-php73, file:///github/workspace/vendor/illuminate/auth, file:///github/workspace/vendor/egulias/email-validator, file:///github/workspace/vendor/symfony/http-kernel, file:///github/workspace/vendor/illuminate/log, file:///github/workspace/vendor/symfony/finder, file:///github/workspace/vendor/illuminate/session, file:///github/workspace/vendor/symfony/translation, file:///github/workspace/vendor/sebastian/global-state, file:///github/workspace/vendor/illuminate/hashing, file:///github/workspace/vendor/symfony/polyfill-mbstring, file:///github/workspace/vendor/sebastian/complexity, file:///github/workspace/vendor/illuminate/contracts, file:///github/workspace/vendor/symfony/translation-contracts, file:///github/workspace/vendor/sebastian/recursion-context, file:///github/workspace/vendor/illuminate/view, file:///github/workspace/vendor/symfony/http-foundation, file:///github/workspace/vendor/sebastian/object-reflector, file:///github/workspace/vendor/illuminate/database, file:///github/workspace/vendor/composer, file:///github/workspace/vendor/sebastian/object-enumerator, file:///github/workspace/vendor/illuminate/encryption, file:///github/workspace/vendor/sebastian/cli-parser, file:///github/workspace/vendor/illuminate/collections, file:///github/workspace/vendor/sebastian/diff, file:///github/workspace/vendor/illuminate/validation, file:///github/workspace/vendor/sebastian/lines-of-code, file:///github/workspace/vendor/illuminate/events, file:///github/workspace/vendor/sebastian/type, file:///github/workspace/vendor/illuminate/console, file:///github/workspace/vendor/sebastian/version, file:///github/workspace/vendor/illuminate/cache, file:///github/workspace/vendor/sebastian/comparator, file:///github/workspace/vendor/illuminate/testing, file:///github/workspace/vendor/sebastian/environment, file:///github/workspace/vendor/illuminate/filesystem, file:///github/workspace/vendor/sebastian/exporter, file:///github/workspace/vendor/illuminate/broadcasting, file:///github/workspace/vendor/sebastian/code-unit, file:///github/workspace/vendor/illuminate/pipeline, file:///github/workspace/vendor/sebastian/resource-operations, file:///github/workspace/vendor/illuminate/macroable, file:///github/workspace/vendor/sebastian/code-unit-reverse-lookup, file:///github/workspace/vendor/illuminate/translation, file:///github/workspace/vendor/illuminate/http, file:///github/workspace/vendor/illuminate/support, file:///github/workspace/vendor/illuminate/config, file:///github/workspace/vendor/illuminate/queue, file:///github/workspace/vendor/nesbot/carbon, file:///github/workspace/vendor/phpunit/phpunit, file:///github/workspace/vendor/nikic/php-parser, file:///github/workspace/vendor/fakerphp/faker, file:///github/workspace/vendor/monolog/monolog, file:///github/workspace/vendor/symfony/var-dumper, file:///github/workspace/vendor/phpspec/prophecy, file:///github/workspace/vendor/ramsey/collection, file:///github/workspace/vendor/psr/container, file:///github/workspace/vendor/ramsey/uuid, file:///github/workspace/vendor/psr/event-dispatcher, file:///github/workspace/vendor/psr/log, file:///github/workspace/vendor/psr/simple-cache, file:///github/workspace/vendor/graham-campbell/result-type, file:///github/workspace/vendor/brick/math, file:///github/workspace/vendor/hamcrest/hamcrest-php, file:///github/workspace/vendor/laravel/lumen-framework, file:///github/workspace/vendor/nikic/fast-route, file:///github/workspace/vendor/opis/closure, file:///github/workspace/vendor/voku/portable-ascii, file:///github/workspace/vendor/mockery/mockery, file:///github/workspace/vendor/phpunit/php-timer, file:///github/workspace/vendor/phpunit/php-file-iterator, file:///github/workspace/vendor/phpunit/php-text-template, file:///github/workspace/vendor/phpunit/php-invoker, file:///github/workspace/vendor/phpunit/php-code-coverage, file:///github/workspace/vendor/myclabs/deep-copy, file:///github/workspace/vendor/theseer/tokenizer, file:///github/workspace/vendor/dragonmantank/cron-expression, file:///github/workspace/vendor/doctrine/instantiator, file:///github/workspace/vendor/doctrine/inflector, file:///github/workspace/vendor/doctrine/lexer, file:///github/workspace/vendor/phpdocumentor/reflection-docblock, file:///github/workspace/vendor/phpdocumentor/type-resolver, file:///github/workspace/vendor/phpdocumentor/reflection-common, file:///github/workspace/vendor/vlucas/phpdotenv, file:///github/workspace/vendor/phar-io/manifest, file:///github/workspace/vendor/phar-io/version],
remove [],
deleted files [] 
2021-02-15 15:59:13,239 [  82260][AWT-EventQueue-0 [WriteAccessToken]]   INFO - pl.ProjectRootManagerComponent - project roots have changed (trace_hash = -324780973) 
java.lang.Throwable
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:305)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:146)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:143)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:121)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.makeRootsChange(ProjectRootManagerImpl.java:431)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.lambda$fireLibraryChanged$4(PhpAdditionalLibraryManager.java:184)
	at com.intellij.openapi.application.WriteAction.run(WriteAction.java:102)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.lambda$fireLibraryChanged$5(PhpAdditionalLibraryManager.java:184)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.fireLibraryChanged(PhpAdditionalLibraryManager.java:187)
	at com.jetbrains.php.config.library.PhpIncludePathManager.lambda$setIncludePath$3(PhpIncludePathManager.java:133)
	at com.intellij.openapi.project.DumbServiceImpl.doUnsafeRunWhenSmart(DumbServiceImpl.java:254)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$runWhenSmart$0(DumbServiceImpl.java:240)
	at com.intellij.ide.startup.impl.StartupManagerImpl.runAfterOpened(StartupManagerImpl.java:489)
	at com.intellij.openapi.project.DumbServiceImpl.runWhenSmart(DumbServiceImpl.java:240)
	at com.jetbrains.php.config.library.PhpIncludePathManager.setIncludePath(PhpIncludePathManager.java:130)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$IncludePathApplier.run(ComposerLibraryManager.java:394)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.invokeLater(ComposerLibraryManager.java:314)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changeIncludePaths(ComposerLibraryManager.java:309)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changePackages(ComposerLibraryManager.java:227)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.resetLibrariesAndExcludedPaths(ComposerLibraryManager.java:188)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.reloadLibraries(ComposerLibraryManager.java:172)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$1.configPathOrLibraryStatusChanged(ComposerLibraryManager.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.EventDispatcher.dispatchVoidMethod(EventDispatcher.java:123)
	at com.intellij.util.EventDispatcher.lambda$createMulticaster$1(EventDispatcher.java:86)
	at com.sun.proxy.$Proxy74.configPathOrLibraryStatusChanged(Unknown Source)
	at com.jetbrains.php.composer.ComposerDataService.setConfigPathAndLibraryUpdateStatus(ComposerDataService.java:129)
	at com.jetbrains.php.composer.ComposerDetectionManager.offerInitialization(ComposerDetectionManager.java:41)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.lambda$onProjectOpening$2(ComposerLibraryManager.java:91)
	at com.intellij.openapi.project.DumbServiceImpl.unsafeRunWhenSmart(DumbServiceImpl.java:272)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$unsafeRunWhenSmart$3(DumbServiceImpl.java:275)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:59:13,373 [  82394][AWT-EventQueue-0 [WriteAccessToken]]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 132ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:13,425 [  82446][AWT-EventQueue-0 [WriteAccessToken]]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 46ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:13,558 [  82579][AWT-EventQueue-0 [WriteAccessToken]]   WARN - openapi.util.io.FileSystemUtil - Unable to load library 'e2p':
libe2p.so: cannot open shared object file: No such file or directory
libe2p.so: cannot open shared object file: No such file or directory
Native library (linux-x86-64/libe2p.so) not found in resource path (/opt/idea/lib/bootstrap.jar:/opt/idea/lib/extensions.jar:/opt/idea/lib/util.jar:/opt/idea/lib/jdom.jar:/opt/idea/lib/log4j.jar:/opt/idea/lib/jna.jar:/usr/lib/jvm/java-11-amazon-corretto/lib/tools.jar) 
java.lang.UnsatisfiedLinkError: Unable to load library 'e2p':
libe2p.so: cannot open shared object file: No such file or directory
libe2p.so: cannot open shared object file: No such file or directory
Native library (linux-x86-64/libe2p.so) not found in resource path (/opt/idea/lib/bootstrap.jar:/opt/idea/lib/extensions.jar:/opt/idea/lib/util.jar:/opt/idea/lib/jdom.jar:/opt/idea/lib/log4j.jar:/opt/idea/lib/jna.jar:/usr/lib/jvm/java-11-amazon-corretto/lib/tools.jar)
	at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:301)
	at com.sun.jna.NativeLibrary.getInstance(NativeLibrary.java:461)
	at com.sun.jna.Library$Handler.<init>(Library.java:192)
	at com.sun.jna.Native.load(Native.java:596)
	at com.sun.jna.Native.load(Native.java:570)
	at com.intellij.openapi.util.io.FileSystemUtil$E2P.<clinit>(FileSystemUtil.java:736)
	at com.intellij.openapi.util.io.FileSystemUtil.getLinuxCaseSensitivity(FileSystemUtil.java:707)
	at com.intellij.openapi.util.io.FileSystemUtil.readParentCaseSensitivity(FileSystemUtil.java:482)
	at com.intellij.openapi.vfs.newvfs.VfsImplUtil.generateCaseSensitivityChangedEvent(VfsImplUtil.java:304)
	at com.intellij.openapi.vfs.newvfs.VfsEventGenerationHelper.scheduleCreation(VfsEventGenerationHelper.java:96)
	at com.intellij.openapi.vfs.newvfs.RefreshWorker.fullDirRefresh(RefreshWorker.java:218)
	at com.intellij.openapi.vfs.newvfs.RefreshWorker.processQueue(RefreshWorker.java:120)
	at com.intellij.openapi.vfs.newvfs.RefreshWorker.scan(RefreshWorker.java:94)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.scan(RefreshSessionImpl.java:155)
	at com.intellij.openapi.vfs.newvfs.RefreshQueueImpl.doScan(RefreshQueueImpl.java:131)
	at com.intellij.openapi.vfs.newvfs.RefreshQueueImpl.execute(RefreshQueueImpl.java:53)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.launch(RefreshSessionImpl.java:114)
	at com.intellij.openapi.vfs.PlatformVirtualFileManager.doRefresh(PlatformVirtualFileManager.java:33)
	at com.intellij.openapi.vfs.impl.VirtualFileManagerImpl.syncRefresh(VirtualFileManagerImpl.java:126)
	at com.intellij.util.indexing.UnindexedFilesUpdater.lambda$scheduleInitialVfsRefresh$8(UnindexedFilesUpdater.java:349)
	at com.intellij.openapi.application.impl.ApplicationImpl.invokeAndWait(ApplicationImpl.java:463)
	at com.intellij.openapi.application.impl.ApplicationImpl.invokeAndWait(ApplicationImpl.java:481)
	at com.intellij.util.indexing.UnindexedFilesUpdater.scheduleInitialVfsRefresh(UnindexedFilesUpdater.java:349)
	at com.intellij.util.indexing.UnindexedFilesUpdater.updateUnindexedFiles(UnindexedFilesUpdater.java:149)
	at com.intellij.util.indexing.UnindexedFilesUpdater.performInDumbMode(UnindexedFilesUpdater.java:372)
	at com.intellij.openapi.project.DumbServiceMergingTaskQueue$QueuedDumbModeTask.executeTask(DumbServiceMergingTaskQueue.java:200)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.doRunTaskSynchronously(DumbServiceSyncTaskQueue.java:62)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.processQueue(DumbServiceSyncTaskQueue.java:48)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.runTaskSynchronously(DumbServiceSyncTaskQueue.java:38)
	at com.intellij.openapi.project.DumbServiceImpl.queueTask(DumbServiceImpl.java:289)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:310)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:146)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:143)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:121)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.makeRootsChange(ProjectRootManagerImpl.java:431)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.lambda$fireLibraryChanged$4(PhpAdditionalLibraryManager.java:184)
	at com.intellij.openapi.application.WriteAction.run(WriteAction.java:102)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.lambda$fireLibraryChanged$5(PhpAdditionalLibraryManager.java:184)
	at com.jetbrains.php.config.library.PhpAdditionalLibraryManager.fireLibraryChanged(PhpAdditionalLibraryManager.java:187)
	at com.jetbrains.php.config.library.PhpIncludePathManager.lambda$setIncludePath$3(PhpIncludePathManager.java:133)
	at com.intellij.openapi.project.DumbServiceImpl.doUnsafeRunWhenSmart(DumbServiceImpl.java:254)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$runWhenSmart$0(DumbServiceImpl.java:240)
	at com.intellij.ide.startup.impl.StartupManagerImpl.runAfterOpened(StartupManagerImpl.java:489)
	at com.intellij.openapi.project.DumbServiceImpl.runWhenSmart(DumbServiceImpl.java:240)
	at com.jetbrains.php.config.library.PhpIncludePathManager.setIncludePath(PhpIncludePathManager.java:130)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$IncludePathApplier.run(ComposerLibraryManager.java:394)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.invokeLater(ComposerLibraryManager.java:314)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changeIncludePaths(ComposerLibraryManager.java:309)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changePackages(ComposerLibraryManager.java:227)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.resetLibrariesAndExcludedPaths(ComposerLibraryManager.java:188)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.reloadLibraries(ComposerLibraryManager.java:172)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$1.configPathOrLibraryStatusChanged(ComposerLibraryManager.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.EventDispatcher.dispatchVoidMethod(EventDispatcher.java:123)
	at com.intellij.util.EventDispatcher.lambda$createMulticaster$1(EventDispatcher.java:86)
	at com.sun.proxy.$Proxy74.configPathOrLibraryStatusChanged(Unknown Source)
	at com.jetbrains.php.composer.ComposerDataService.setConfigPathAndLibraryUpdateStatus(ComposerDataService.java:129)
	at com.jetbrains.php.composer.ComposerDetectionManager.offerInitialization(ComposerDetectionManager.java:41)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.lambda$onProjectOpening$2(ComposerLibraryManager.java:91)
	at com.intellij.openapi.project.DumbServiceImpl.unsafeRunWhenSmart(DumbServiceImpl.java:272)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$unsafeRunWhenSmart$3(DumbServiceImpl.java:275)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
	Suppressed: java.lang.UnsatisfiedLinkError: libe2p.so: cannot open shared object file: No such file or directory
		at com.sun.jna.Native.open(Native Method)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:191)
		... 95 more
	Suppressed: java.lang.UnsatisfiedLinkError: libe2p.so: cannot open shared object file: No such file or directory
		at com.sun.jna.Native.open(Native Method)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:204)
		... 95 more
	Suppressed: java.io.IOException: Native library (linux-x86-64/libe2p.so) not found in resource path (/opt/idea/lib/bootstrap.jar:/opt/idea/lib/extensions.jar:/opt/idea/lib/util.jar:/opt/idea/lib/jdom.jar:/opt/idea/lib/log4j.jar:/opt/idea/lib/jna.jar:/usr/lib/jvm/java-11-amazon-corretto/lib/tools.jar)
		at com.sun.jna.Native.extractFromResourcePath(Native.java:1095)
		at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:275)
		... 95 more
2021-02-15 15:59:13,986 [  83007][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 0 files to index 
2021-02-15 15:59:14,051 [  83072][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 32ms 
2021-02-15 15:59:14,055 [  83076][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:14,099 [  83120][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 48ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:14,838 [  83859][AWT-EventQueue-0]   INFO - pl.ProjectRootManagerComponent - project roots have changed (trace_hash = -1667254646) 
java.lang.Throwable
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:305)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:146)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:143)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootsChangeListener.changed(ProjectRootsChangeListener.kt:34)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.ModuleManagerComponentBridge$2.changed(ModuleManagerComponentBridge.kt:179)
	at com.intellij.workspaceModel.ide.WorkspaceModelTopics$EventsDispatcher.changed(WorkspaceModelTopics.kt:107)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.messages.impl.MessageBusImpl.invokeListener(MessageBusImpl.java:652)
	at com.intellij.util.messages.impl.MessageBusImpl.deliverMessage(MessageBusImpl.java:426)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpWaitingBuses(MessageBusImpl.java:401)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpMessages(MessageBusImpl.java:383)
	at com.intellij.util.messages.impl.MessageBusImpl.access$100(MessageBusImpl.java:33)
	at com.intellij.util.messages.impl.MessageBusImpl$MessagePublisher.invoke(MessageBusImpl.java:189)
	at com.sun.proxy.$Proxy37.changed(Unknown Source)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.onChanged(WorkspaceModelImpl.kt:90)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.access$onChanged(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.storage.impl.VersionedEntityStorageImpl.replace(VersionedEntityStorageImpl.kt:160)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.updateProjectModel(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.roots.ModifiableRootModelBridgeImpl.commit(ModifiableRootModelBridgeImpl.kt:502)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$ExcludedDirectoriesApplier.lambda$run$0(ComposerLibraryManager.java:551)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1000)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$ExcludedDirectoriesApplier.run(ComposerLibraryManager.java:551)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.invokeLater(ComposerLibraryManager.java:314)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changeExcludedFolders(ComposerLibraryManager.java:465)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.changePackages(ComposerLibraryManager.java:249)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.resetLibrariesAndExcludedPaths(ComposerLibraryManager.java:188)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.reloadLibraries(ComposerLibraryManager.java:172)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager$1.configPathOrLibraryStatusChanged(ComposerLibraryManager.java:73)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.EventDispatcher.dispatchVoidMethod(EventDispatcher.java:123)
	at com.intellij.util.EventDispatcher.lambda$createMulticaster$1(EventDispatcher.java:86)
	at com.sun.proxy.$Proxy74.configPathOrLibraryStatusChanged(Unknown Source)
	at com.jetbrains.php.composer.ComposerDataService.setConfigPathAndLibraryUpdateStatus(ComposerDataService.java:129)
	at com.jetbrains.php.composer.ComposerDetectionManager.offerInitialization(ComposerDetectionManager.java:41)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.lambda$onProjectOpening$2(ComposerLibraryManager.java:91)
	at com.intellij.openapi.project.DumbServiceImpl.unsafeRunWhenSmart(DumbServiceImpl.java:272)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$unsafeRunWhenSmart$3(DumbServiceImpl.java:275)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:59:14,861 [  83882][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 16ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:14,902 [  83923][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 40ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,068 [  84089][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 0 files to index 
2021-02-15 15:59:15,072 [  84093][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 1ms 
2021-02-15 15:59:15,072 [  84093][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:15,094 [  84115][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,099 [  84120][AWT-EventQueue-0]   INFO - omposerSettingSyncConfigClient - Composer synchronization is enabled -> update IDE settings based on composer.json 
2021-02-15 15:59:15,166 [  84187][AWT-EventQueue-0]   INFO - pl.ProjectRootManagerComponent - project roots have changed (trace_hash = 126846491) 
java.lang.Throwable
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:305)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:146)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:143)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootsChangeListener.changed(ProjectRootsChangeListener.kt:34)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.ModuleManagerComponentBridge$2.changed(ModuleManagerComponentBridge.kt:179)
	at com.intellij.workspaceModel.ide.WorkspaceModelTopics$EventsDispatcher.changed(WorkspaceModelTopics.kt:107)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.messages.impl.MessageBusImpl.invokeListener(MessageBusImpl.java:652)
	at com.intellij.util.messages.impl.MessageBusImpl.deliverMessage(MessageBusImpl.java:426)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpWaitingBuses(MessageBusImpl.java:401)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpMessages(MessageBusImpl.java:383)
	at com.intellij.util.messages.impl.MessageBusImpl.access$100(MessageBusImpl.java:33)
	at com.intellij.util.messages.impl.MessageBusImpl$MessagePublisher.invoke(MessageBusImpl.java:189)
	at com.sun.proxy.$Proxy37.changed(Unknown Source)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.onChanged(WorkspaceModelImpl.kt:90)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.access$onChanged(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.storage.impl.VersionedEntityStorageImpl.replace(VersionedEntityStorageImpl.kt:160)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.updateProjectModel(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.roots.ModifiableRootModelBridgeImpl.commit(ModifiableRootModelBridgeImpl.kt:502)
	at com.jetbrains.php.roots.PhpPsrNamespaceRootDetector.lambda$addSourceRoots$9(PhpPsrNamespaceRootDetector.java:268)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1000)
	at com.jetbrains.php.roots.PhpPsrNamespaceRootDetector.addSourceRoots(PhpPsrNamespaceRootDetector.java:268)
	at com.jetbrains.php.roots.PhpPsrComposerConfig.updateSetting(PhpPsrComposerConfig.java:105)
	at com.jetbrains.php.roots.PhpPsrComposerConfig.updateSetting(PhpPsrComposerConfig.java:32)
	at com.jetbrains.php.composer.ComposerSettingSyncConfigClient.consume(ComposerSettingSyncConfigClient.java:50)
	at com.jetbrains.php.composer.configData.ComposerConfigListener.inform(ComposerConfigListener.java:44)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.doInform(ComposerJsonConfigService.java:149)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.handleChange(ComposerJsonConfigService.java:128)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.handleChange(ComposerJsonConfigService.java:116)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService$2.configPathOrLibraryStatusChanged(ComposerJsonConfigService.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.EventDispatcher.dispatchVoidMethod(EventDispatcher.java:123)
	at com.intellij.util.EventDispatcher.lambda$createMulticaster$1(EventDispatcher.java:86)
	at com.sun.proxy.$Proxy74.configPathOrLibraryStatusChanged(Unknown Source)
	at com.jetbrains.php.composer.ComposerDataService.setConfigPathAndLibraryUpdateStatus(ComposerDataService.java:129)
	at com.jetbrains.php.composer.ComposerDetectionManager.offerInitialization(ComposerDetectionManager.java:41)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.lambda$onProjectOpening$2(ComposerLibraryManager.java:91)
	at com.intellij.openapi.project.DumbServiceImpl.unsafeRunWhenSmart(DumbServiceImpl.java:272)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$unsafeRunWhenSmart$3(DumbServiceImpl.java:275)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:59:15,187 [  84208][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 20ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,217 [  84238][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 30ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,390 [  84411][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 0 files to index 
2021-02-15 15:59:15,394 [  84415][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 3ms 
2021-02-15 15:59:15,394 [  84415][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:15,400 [  84421][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 6ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,509 [  84530][AWT-EventQueue-0]   INFO - pl.ProjectRootManagerComponent - project roots have changed (trace_hash = -388676082) 
java.lang.Throwable
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:305)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:146)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$1.fireRootsChanged(ProjectRootManagerImpl.java:143)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.project.ProjectRootsChangeListener.changed(ProjectRootsChangeListener.kt:34)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.ModuleManagerComponentBridge$2.changed(ModuleManagerComponentBridge.kt:179)
	at com.intellij.workspaceModel.ide.WorkspaceModelTopics$EventsDispatcher.changed(WorkspaceModelTopics.kt:107)
	at jdk.internal.reflect.GeneratedMethodAccessor54.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.messages.impl.MessageBusImpl.invokeListener(MessageBusImpl.java:652)
	at com.intellij.util.messages.impl.MessageBusImpl.deliverMessage(MessageBusImpl.java:426)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpWaitingBuses(MessageBusImpl.java:401)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpMessages(MessageBusImpl.java:383)
	at com.intellij.util.messages.impl.MessageBusImpl.access$100(MessageBusImpl.java:33)
	at com.intellij.util.messages.impl.MessageBusImpl$MessagePublisher.invoke(MessageBusImpl.java:189)
	at com.sun.proxy.$Proxy37.changed(Unknown Source)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.onChanged(WorkspaceModelImpl.kt:90)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.access$onChanged(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl$updateProjectModel$2.invoke(WorkspaceModelImpl.kt:22)
	at com.intellij.workspaceModel.storage.impl.VersionedEntityStorageImpl.replace(VersionedEntityStorageImpl.kt:160)
	at com.intellij.workspaceModel.ide.impl.WorkspaceModelImpl.updateProjectModel(WorkspaceModelImpl.kt:68)
	at com.intellij.workspaceModel.ide.impl.legacyBridge.module.roots.ModifiableRootModelBridgeImpl.commit(ModifiableRootModelBridgeImpl.kt:502)
	at com.jetbrains.php.roots.PhpPsrNamespaceRootDetector.lambda$addSourceRoots$9(PhpPsrNamespaceRootDetector.java:268)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1000)
	at com.jetbrains.php.roots.PhpPsrNamespaceRootDetector.addSourceRoots(PhpPsrNamespaceRootDetector.java:268)
	at com.jetbrains.php.roots.PhpPsrNamespaceRootDetector.addSourceRoots(PhpPsrNamespaceRootDetector.java:252)
	at com.jetbrains.php.phpunit.PhpUnitDirectoriesManager.updateDirectories(PhpUnitDirectoriesManager.java:60)
	at com.jetbrains.php.phpunit.PhpUnitComposerConfig.updateByConfigurationFile(PhpUnitComposerConfig.java:104)
	at com.jetbrains.php.phpunit.PhpUnitComposerConfig.updateRunConfigurations(PhpUnitComposerConfig.java:71)
	at com.jetbrains.php.phpunit.PhpUnitComposerConfig.updateSettings(PhpUnitComposerConfig.java:53)
	at com.jetbrains.php.phpunit.PhpUnitComposerConfig.updateSettings(PhpUnitComposerConfig.java:37)
	at com.jetbrains.php.composer.configData.PackageComposerConfigClient.consume(PackageComposerConfigClient.java:55)
	at com.jetbrains.php.composer.configData.PackageComposerConfigClient.consume(PackageComposerConfigClient.java:26)
	at com.jetbrains.php.composer.configData.ComposerConfigListener.inform(ComposerConfigListener.java:44)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.doInform(ComposerJsonConfigService.java:149)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.handleChange(ComposerJsonConfigService.java:128)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService.handleChange(ComposerJsonConfigService.java:116)
	at com.jetbrains.php.composer.configData.ComposerJsonConfigService$2.configPathOrLibraryStatusChanged(ComposerJsonConfigService.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.EventDispatcher.dispatchVoidMethod(EventDispatcher.java:123)
	at com.intellij.util.EventDispatcher.lambda$createMulticaster$1(EventDispatcher.java:86)
	at com.sun.proxy.$Proxy74.configPathOrLibraryStatusChanged(Unknown Source)
	at com.jetbrains.php.composer.ComposerDataService.setConfigPathAndLibraryUpdateStatus(ComposerDataService.java:129)
	at com.jetbrains.php.composer.ComposerDetectionManager.offerInitialization(ComposerDetectionManager.java:41)
	at com.jetbrains.php.composer.lib.ComposerLibraryManager.lambda$onProjectOpening$2(ComposerLibraryManager.java:91)
	at com.intellij.openapi.project.DumbServiceImpl.unsafeRunWhenSmart(DumbServiceImpl.java:272)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$unsafeRunWhenSmart$3(DumbServiceImpl.java:275)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:59:15,519 [  84540][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,542 [  84563][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 23ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,683 [  84704][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 0 files to index 
2021-02-15 15:59:15,687 [  84708][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 0ms 
2021-02-15 15:59:15,687 [  84708][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:15,692 [  84713][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 5ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:15,770 [  84791][AWT-EventQueue-0]   INFO - omposerSettingSyncConfigClient - Composer synchronization is enabled -> update IDE settings based on composer.json 
2021-02-15 15:59:15,801 [  84822][AWT-EventQueue-0]   INFO - omposerSettingSyncConfigClient - Composer synchronization is enabled -> update IDE settings based on composer.json 
2021-02-15 15:59:15,805 [  84826][AWT-EventQueue-0]   INFO - omposerSettingSyncConfigClient - Composer synchronization is enabled -> update IDE settings based on composer.json 
2021-02-15 15:59:15,813 [  84834][ApplicationImpl pooled thread 3]   INFO - spection.InspectionApplication - Startup activities finished 
2021-02-15 15:59:15,866 [  84887][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - indexes cleared: 
survived indexes: FilenameIndex, FrameworkDetectionIndex, TodoIndex, IdIndex, filetypes, Stubs, Trigram.Index, fileIncludes, DomFileIndex, RelaxSymbolIndex, XmlTagNames, XmlNamespaces, html5.custom.attributes.index, SchemaTypeInheritance, json.file.root.values, HashFragmentIndex, HtmlTagIdIndex, XsltSymbolIndex, CssIndex, css.template.selectors, bytecodeAnalysis, java.auto.module.name, java.source.module.name, java.null.method.argument, java.fun.expression, java.binary.plus.expression, xmlProperties, ant-imports, com.intellij.uiDesigner.FormClassIndex, VtlFileIndex, sql.types.count.index, sql.routine.index, groovy.trait.fields, groovy.trait.methods, IdeaPluginRegistrationIndex, PluginIdModuleIndex, PluginIdDependenciesIndex, devkit.ExtensionPointIndex, devkit.ExtensionPointClassIndex, taglibUris, SpringXmlBeansIndex, spring.spiFileIndex, FileBasedWSIndex, FtlFileIndex, spring.autoConfigureMetadataIndex, org.jetbrains.kotlin.idea.versions.KotlinJvmMetadataVersionIndex, org.jetbrains.kotlin.idea.versions.KotlinJsMetadataVersionIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinClassFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinJavaScriptMetaFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinMetadataFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinMetadataFilePackageIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinModuleMappingIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinPackageSourcesMemberNamesIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinJvmModuleAnnotationsIndex, org.jetbrains.kotlin.idea.vfilefinder.KlibMetaFileIndex, org.jetbrains.kotlin.idea.script.ScriptTemplatesClassRootsIndex, php.class.name, php.constant.name, php.function.name, php.variable.name, php.method.name, php.class.fqn, php.interface.fqn, php.invoke.calls.offsets, php.array.access.offsets, php.serialize.function.calls.offsets, php.putenv.arguments, php.doctag.user.name, php.field.names.accessed.by.the.constructor, php.to.string.methods.with.exception.throw, php.namespace.inheritance, php.trait.usage, php.unit.covers, php.class.alias.name, php.class.alias.to.class, php.class.to.class.alias, php.expected.function.arguments, php.expected.function.return.values, php.constants.default.expected.arguments, php.constants.default.array.shapes, php.meta.type.inference.mapping, php.exit.point.function.index, php.function.always.re, php.functions.with.not.catched.dynamic.passed.calls, php.generator.operands.type.index, php.parameters.default.value.matchers, php.max.language.level, php.fields.default.value.matchers, php.array.shapes.entries, php.trivial.pure 
2021-02-15 15:59:15,867 [  84888][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - scheduleIndexRebuild, reason: File type change 
2021-02-15 15:59:15,881 [  84902][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 14ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:16,529 [  85550][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 648ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:16,683 [  85704][AWT-EventQueue-0 [WriteAccessToken]]   INFO - pl.ProjectRootManagerComponent - project roots have changed (trace_hash = -1492631313) 
java.lang.Throwable
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.synchronizeRoots(ProjectRootManagerComponent.java:305)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent.fireRootsChangedEvent(ProjectRootManagerComponent.java:205)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl.fireRootsChanged(ProjectRootManagerImpl.java:459)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$2.fireRootsChanged(ProjectRootManagerImpl.java:167)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$2.fireRootsChanged(ProjectRootManagerImpl.java:164)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:113)
	at com.intellij.openapi.roots.impl.ProjectRootManagerImpl$BatchSession.rootsChanged(ProjectRootManagerImpl.java:121)
	at com.intellij.openapi.roots.impl.ProjectRootManagerComponent$1.fileTypesChanged(ProjectRootManagerComponent.java:99)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.messages.impl.MessageBusImpl.invokeListener(MessageBusImpl.java:652)
	at com.intellij.util.messages.impl.MessageBusImpl.deliverMessage(MessageBusImpl.java:426)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpWaitingBuses(MessageBusImpl.java:401)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpMessages(MessageBusImpl.java:383)
	at com.intellij.util.messages.impl.MessageBusImpl.access$100(MessageBusImpl.java:33)
	at com.intellij.util.messages.impl.MessageBusImpl$MessagePublisher.invoke(MessageBusImpl.java:182)
	at com.sun.proxy.$Proxy46.before(Unknown Source)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.fireBeforeEvents(PersistentFSImpl.java:1084)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.applyMultipleEvents(PersistentFSImpl.java:1074)
	at com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl.processEvents(PersistentFSImpl.java:1063)
	at com.intellij.openapi.vfs.newvfs.AsyncEventSupport.processEventsFromRefresh(AsyncEventSupport.java:130)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.fireEventsInWriteAction(RefreshSessionImpl.java:226)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.lambda$fireEvents$1(RefreshSessionImpl.java:204)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$runEdtProgressWriteAction$12(ApplicationImpl.java:964)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:178)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:658)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:610)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:65)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:165)
	at com.intellij.openapi.progress.util.PotemkinProgress.runInSwingThread(PotemkinProgress.java:191)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$runEdtProgressWriteAction$13(ApplicationImpl.java:964)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteActionWithClass(ApplicationImpl.java:988)
	at com.intellij.openapi.application.impl.ApplicationImpl.runEdtProgressWriteAction(ApplicationImpl.java:962)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteActionWithNonCancellableProgressInDispatchThread(ApplicationImpl.java:943)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.lambda$fireEvents$2(RefreshSessionImpl.java:198)
	at com.intellij.openapi.application.WriteAction.run(WriteAction.java:102)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.fireEvents(RefreshSessionImpl.java:197)
	at com.intellij.openapi.vfs.newvfs.RefreshQueueImpl.execute(RefreshQueueImpl.java:54)
	at com.intellij.openapi.vfs.newvfs.RefreshSessionImpl.launch(RefreshSessionImpl.java:114)
	at com.intellij.openapi.vfs.PlatformVirtualFileManager.doRefresh(PlatformVirtualFileManager.java:33)
	at com.intellij.openapi.vfs.impl.VirtualFileManagerImpl.syncRefresh(VirtualFileManagerImpl.java:126)
	at com.intellij.util.indexing.UnindexedFilesUpdater.lambda$scheduleInitialVfsRefresh$8(UnindexedFilesUpdater.java:349)
	at com.intellij.openapi.application.impl.ApplicationImpl.invokeAndWait(ApplicationImpl.java:463)
	at com.intellij.openapi.application.impl.ApplicationImpl.invokeAndWait(ApplicationImpl.java:481)
	at com.intellij.util.indexing.UnindexedFilesUpdater.scheduleInitialVfsRefresh(UnindexedFilesUpdater.java:349)
	at com.intellij.util.indexing.UnindexedFilesUpdater.updateUnindexedFiles(UnindexedFilesUpdater.java:149)
	at com.intellij.util.indexing.UnindexedFilesUpdater.performInDumbMode(UnindexedFilesUpdater.java:372)
	at com.intellij.openapi.project.DumbServiceMergingTaskQueue$QueuedDumbModeTask.executeTask(DumbServiceMergingTaskQueue.java:200)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.doRunTaskSynchronously(DumbServiceSyncTaskQueue.java:62)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.processQueue(DumbServiceSyncTaskQueue.java:48)
	at com.intellij.openapi.project.DumbServiceSyncTaskQueue.runTaskSynchronously(DumbServiceSyncTaskQueue.java:38)
	at com.intellij.openapi.project.DumbServiceImpl.queueTask(DumbServiceImpl.java:289)
	at com.intellij.util.indexing.FileBasedIndexImpl.scheduleIndexRebuild(FileBasedIndexImpl.java:872)
	at com.intellij.util.indexing.FileBasedIndexImpl.scheduleFullIndexesRescan(FileBasedIndexImpl.java:204)
	at com.intellij.util.indexing.FileBasedIndexFileTypeListener.fileTypesChanged(FileBasedIndexFileTypeListener.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.intellij.util.messages.impl.MessageBusImpl.invokeListener(MessageBusImpl.java:652)
	at com.intellij.util.messages.impl.MessageBusImpl.deliverMessage(MessageBusImpl.java:426)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpWaitingBuses(MessageBusImpl.java:401)
	at com.intellij.util.messages.impl.MessageBusImpl.pumpMessages(MessageBusImpl.java:383)
	at com.intellij.util.messages.impl.MessageBusImpl.access$100(MessageBusImpl.java:33)
	at com.intellij.util.messages.impl.MessageBusImpl$MessagePublisher.invoke(MessageBusImpl.java:189)
	at com.sun.proxy.$Proxy85.fileTypesChanged(Unknown Source)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.fireFileTypesChanged(FileTypeManagerImpl.java:816)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.fireFileTypesChanged(FileTypeManagerImpl.java:810)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.associate(FileTypeManagerImpl.java:1312)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.associate(FileTypeManagerImpl.java:793)
	at com.intellij.openapi.fileTypes.FileTypeManager.associateExtension(FileTypeManager.java:147)
	at org.jetbrains.kotlin.idea.core.script.ScriptDefinitionsManager$updateDefinitions$2$$special$$inlined$runWriteAction$1.compute(actions.kt:63)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$runWriteAction$16(ApplicationImpl.java:1009)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteActionWithClass(ApplicationImpl.java:988)
	at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1009)
	at org.jetbrains.kotlin.idea.core.script.ScriptDefinitionsManager$updateDefinitions$2.run(ScriptDefinitionsManager.kt:422)
	at com.intellij.openapi.application.TransactionGuardImpl.runWithWritingAllowed(TransactionGuardImpl.java:216)
	at com.intellij.openapi.application.TransactionGuardImpl.access$200(TransactionGuardImpl.java:24)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:199)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.openapi.application.impl.ApplicationImpl.lambda$invokeLater$4(ApplicationImpl.java:324)
	at com.intellij.openapi.application.impl.FlushQueue.doRun(FlushQueue.java:85)
	at com.intellij.openapi.application.impl.FlushQueue.runNextEvent(FlushQueue.java:134)
	at com.intellij.openapi.application.impl.FlushQueue.flushNow(FlushQueue.java:47)
	at com.intellij.openapi.application.impl.FlushQueue$FlushNow.run(FlushQueue.java:190)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:976)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:843)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:454)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:773)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$9(IdeEventQueue.java:453)
	at com.intellij.openapi.application.impl.ApplicationImpl.runIntendedWriteActionOnCurrentThread(ApplicationImpl.java:822)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:501)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
2021-02-15 15:59:16,684 [  85705][AWT-EventQueue-0 [WriteAccessToken]]   INFO - penapi.project.DumbServiceImpl - cancel com.intellij.util.indexing.UnindexedFilesUpdater@56bf3113 
2021-02-15 15:59:16,703 [  85724][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 5381 files to index 
2021-02-15 15:59:16,703 [  85724][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Using 2 threads for indexing 
2021-02-15 15:59:16,867 [  85888][ApplicationImpl pooled thread 8]   INFO - gnostic.MemorySizeConfigurator - Memory size configurator skipped: Unable to determine current -Xmx. VM options file is /opt/idea/bin/idea64.vmoptions 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 1561ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for TodoIndex. requests: 5446, hits: 66, misses: 5380 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for IdIndex. requests: 5446, hits: 66, misses: 5380 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for Trigram.Index. requests: 5446, hits: 66, misses: 5380 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for HashFragmentIndex. requests: 4829, hits: 4, misses: 4825 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for bytecodeAnalysis. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.null.method.argument. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.fun.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,264 [  87285][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.binary.plus.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,300 [  87321][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 20ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,324 [  87345][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 23ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,478 [  87499][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 2 files to index 
2021-02-15 15:59:18,478 [  87499][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Using 2 threads for indexing 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 5ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for TodoIndex. requests: 5448, hits: 66, misses: 5382 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for IdIndex. requests: 5448, hits: 66, misses: 5382 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for Trigram.Index. requests: 5448, hits: 66, misses: 5382 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for HashFragmentIndex. requests: 4829, hits: 4, misses: 4825 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for bytecodeAnalysis. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.null.method.argument. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.fun.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,483 [  87504][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.binary.plus.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:18,491 [  87512][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 0ms 
2021-02-15 15:59:18,491 [  87512][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:18,515 [  87536][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 24ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,521 [  87542][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - indexes cleared: 
survived indexes: FilenameIndex, FrameworkDetectionIndex, TodoIndex, IdIndex, filetypes, Stubs, Trigram.Index, fileIncludes, DomFileIndex, RelaxSymbolIndex, XmlTagNames, XmlNamespaces, html5.custom.attributes.index, SchemaTypeInheritance, json.file.root.values, HashFragmentIndex, HtmlTagIdIndex, XsltSymbolIndex, CssIndex, css.template.selectors, bytecodeAnalysis, java.auto.module.name, java.source.module.name, java.null.method.argument, java.fun.expression, java.binary.plus.expression, xmlProperties, ant-imports, com.intellij.uiDesigner.FormClassIndex, VtlFileIndex, sql.types.count.index, sql.routine.index, groovy.trait.fields, groovy.trait.methods, IdeaPluginRegistrationIndex, PluginIdModuleIndex, PluginIdDependenciesIndex, devkit.ExtensionPointIndex, devkit.ExtensionPointClassIndex, taglibUris, SpringXmlBeansIndex, spring.spiFileIndex, FileBasedWSIndex, FtlFileIndex, spring.autoConfigureMetadataIndex, org.jetbrains.kotlin.idea.versions.KotlinJvmMetadataVersionIndex, org.jetbrains.kotlin.idea.versions.KotlinJsMetadataVersionIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinClassFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinJavaScriptMetaFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinMetadataFileIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinMetadataFilePackageIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinModuleMappingIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinPackageSourcesMemberNamesIndex, org.jetbrains.kotlin.idea.vfilefinder.KotlinJvmModuleAnnotationsIndex, org.jetbrains.kotlin.idea.vfilefinder.KlibMetaFileIndex, org.jetbrains.kotlin.idea.script.ScriptTemplatesClassRootsIndex, php.class.name, php.constant.name, php.function.name, php.variable.name, php.method.name, php.class.fqn, php.interface.fqn, php.invoke.calls.offsets, php.array.access.offsets, php.serialize.function.calls.offsets, php.putenv.arguments, php.doctag.user.name, php.field.names.accessed.by.the.constructor, php.to.string.methods.with.exception.throw, php.namespace.inheritance, php.trait.usage, php.unit.covers, php.class.alias.name, php.class.alias.to.class, php.class.to.class.alias, php.expected.function.arguments, php.expected.function.return.values, php.constants.default.expected.arguments, php.constants.default.array.shapes, php.meta.type.inference.mapping, php.exit.point.function.index, php.function.always.re, php.functions.with.not.catched.dynamic.passed.calls, php.generator.operands.type.index, php.parameters.default.value.matchers, php.max.language.level, php.fields.default.value.matchers, php.array.shapes.entries, php.trivial.pure 
2021-02-15 15:59:18,521 [  87542][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - scheduleIndexRebuild, reason: File type change 
2021-02-15 15:59:18,535 [  87556][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 14ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:18,982 [  88003][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 447ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:19,131 [  88152][AWT-EventQueue-0 [WriteAccessToken]]   INFO - pl.ProjectRootManagerComponent - project roots have changed (stacktrace has been already reported with trace_hash = -1492631313) 
2021-02-15 15:59:19,131 [  88152][AWT-EventQueue-0 [WriteAccessToken]]   INFO - penapi.project.DumbServiceImpl - cancel com.intellij.util.indexing.UnindexedFilesUpdater@6db3f755 
2021-02-15 15:59:19,140 [  88161][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 5381 files to index 
2021-02-15 15:59:19,141 [  88162][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Using 2 threads for indexing 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 1290ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for TodoIndex. requests: 5450, hits: 66, misses: 5384 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for IdIndex. requests: 5450, hits: 66, misses: 5384 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for Trigram.Index. requests: 5450, hits: 66, misses: 5384 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for HashFragmentIndex. requests: 4829, hits: 4, misses: 4825 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for bytecodeAnalysis. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.null.method.argument. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.fun.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,430 [  89451][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.binary.plus.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,448 [  89469][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,498 [  89519][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 50ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,642 [  89663][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 2 files to index 
2021-02-15 15:59:20,642 [  89663][AWT-EventQueue-0]   INFO - indexing.UnindexedFilesUpdater - Using 2 threads for indexing 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 5ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for TodoIndex. requests: 5452, hits: 66, misses: 5386 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for IdIndex. requests: 5452, hits: 66, misses: 5386 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for Trigram.Index. requests: 5452, hits: 66, misses: 5386 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for HashFragmentIndex. requests: 4829, hits: 4, misses: 4825 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for bytecodeAnalysis. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.null.method.argument. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.fun.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,647 [  89668][AWT-EventQueue-0]   INFO - snapshot.SnapshotInputMappings - Snapshot mappings stats for java.binary.plus.expression. requests: 0, hits: 0, misses: 0 
2021-02-15 15:59:20,648 [  89669][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 1 to update, calculated in 0ms 
2021-02-15 15:59:20,648 [  89669][AWT-EventQueue-0]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:20,651 [  89672][AWT-EventQueue-0]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,865 [  89886][AWT-EventQueue-0 [WriteAccessToken]]   INFO - g.FileBasedIndexProjectHandler - Reindexing refreshed files: 2 to update, calculated in 0ms 
2021-02-15 15:59:20,865 [  89886][AWT-EventQueue-0 [WriteAccessToken]]   INFO - g.FileBasedIndexProjectHandler - Using 2 threads for indexing 
2021-02-15 15:59:20,871 [  89892][AWT-EventQueue-0 [WriteAccessToken]]   INFO - .diagnostic.PerformanceWatcher - Reindexing refreshed files took 6ms; general responsiveness: ok; EDT responsiveness: ok 
2021-02-15 15:59:20,921 [  89942][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Opening project...done. 
2021-02-15 15:59:20,962 [  89983][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Initializing project...Loaded shared project profile 'qodana.recommended' 
2021-02-15 15:59:20,967 [  89988][ApplicationImpl pooled thread 3]   INFO - spection.InspectionApplication - Used scope: Project Files 
2021-02-15 15:59:20,968 [  89989][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Inspecting with profile 'qodana.recommended' 
2021-02-15 15:59:24,860 [  93881][DefaultDispatcher-worker-2]   INFO - syncInspectionToolResultWriter - Async result writer started 
2021-02-15 15:59:25,006 [  94027][ApplicationImpl pooled thread 3]   INFO -                         STDERR - The JDK is not configured properly for this project. Inspection cannot proceed. 
2021-02-15 15:59:25,007 [  94028][ApplicationImpl pooled thread 3]   INFO -                         STDERR - null not found 
2021-02-15 15:59:27,892 [  96913][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 1% 
2021-02-15 15:59:28,023 [  97044][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 2% 
2021-02-15 15:59:28,123 [  97144][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 3% 
2021-02-15 15:59:28,190 [  97211][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 5% 
2021-02-15 15:59:28,405 [  97426][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 6% 
2021-02-15 15:59:28,534 [  97555][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 7% 
2021-02-15 15:59:28,613 [  97634][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 8% 
2021-02-15 15:59:28,670 [  97691][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 10% 
2021-02-15 15:59:28,802 [  97823][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 11% 
2021-02-15 15:59:28,865 [  97886][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 12% 
2021-02-15 15:59:28,927 [  97948][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 13% 
2021-02-15 15:59:28,980 [  98001][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 15% 
2021-02-15 15:59:29,104 [  98125][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 16% 
2021-02-15 15:59:29,166 [  98187][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 17% 
2021-02-15 15:59:29,319 [  98340][JobScheduler FJ pool 1/2]   INFO -                         STDOUT - Analyzing code 18% 
2021-02-15 15:59:35,740 [ 104761][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 20% 
2021-02-15 15:59:35,854 [ 104875][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 21% 
2021-02-15 15:59:35,865 [ 104886][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 22% 
2021-02-15 15:59:36,094 [ 105115][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 24% 
2021-02-15 15:59:36,121 [ 105142][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 25% 
2021-02-15 15:59:36,153 [ 105174][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 26% 
2021-02-15 15:59:36,158 [ 105179][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 27% 
2021-02-15 15:59:36,697 [ 105718][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 29% 
2021-02-15 15:59:36,746 [ 105767][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 30% 
2021-02-15 15:59:36,768 [ 105789][ApplicationImpl pooled thread 3]   INFO - tellij.xml.Html5SchemaProvider - HTML5_SCHEMA_LOCATION = /opt/idea/lib/intellij-xml.jar!/resources/html5-schema/html5.rnc 
2021-02-15 15:59:37,199 [ 106220][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 31% 
2021-02-15 15:59:37,281 [ 106302][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 32% 
2021-02-15 15:59:37,414 [ 106435][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 34% 
2021-02-15 15:59:37,420 [ 106441][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 35% 
2021-02-15 15:59:37,445 [ 106466][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 36% 
2021-02-15 15:59:37,456 [ 106477][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 37% 
2021-02-15 15:59:37,758 [ 106779][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 39% 
2021-02-15 15:59:37,778 [ 106799][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 40% 
2021-02-15 15:59:37,832 [ 106853][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 41% 
2021-02-15 15:59:37,857 [ 106878][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 43% 
2021-02-15 15:59:37,905 [ 106926][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 44% 
2021-02-15 15:59:37,926 [ 106947][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 45% 
2021-02-15 15:59:37,970 [ 106991][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 46% 
2021-02-15 15:59:37,987 [ 107008][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 48% 
2021-02-15 15:59:38,029 [ 107050][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 49% 
2021-02-15 15:59:38,111 [ 107132][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 50% 
2021-02-15 15:59:38,154 [ 107175][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 51% 
2021-02-15 15:59:38,211 [ 107232][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 53% 
2021-02-15 15:59:38,284 [ 107305][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 54% 
2021-02-15 15:59:38,326 [ 107347][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 55% 
2021-02-15 15:59:38,368 [ 107389][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 56% 
2021-02-15 15:59:38,420 [ 107441][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 58% 
2021-02-15 15:59:38,465 [ 107486][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 59% 
2021-02-15 15:59:38,579 [ 107600][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 60% 
2021-02-15 15:59:38,875 [ 107896][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 62% 
2021-02-15 15:59:39,020 [ 108041][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 63% 
2021-02-15 15:59:39,038 [ 108059][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 64% 
2021-02-15 15:59:39,044 [ 108065][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 65% 
2021-02-15 15:59:39,072 [ 108093][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 67% 
2021-02-15 15:59:39,079 [ 108100][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 68% 
2021-02-15 15:59:39,081 [ 108102][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 69% 
2021-02-15 15:59:39,086 [ 108107][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 70% 
2021-02-15 15:59:39,090 [ 108111][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 72% 
2021-02-15 15:59:39,093 [ 108114][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 73% 
2021-02-15 15:59:39,165 [ 108186][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 74% 
2021-02-15 15:59:39,260 [ 108281][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 75% 
2021-02-15 15:59:39,270 [ 108291][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 77% 
2021-02-15 15:59:39,370 [ 108391][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 78% 
2021-02-15 15:59:39,376 [ 108397][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 79% 
2021-02-15 15:59:39,579 [ 108600][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 81% 
2021-02-15 15:59:39,583 [ 108604][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 82% 
2021-02-15 15:59:39,586 [ 108607][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 83% 
2021-02-15 15:59:39,593 [ 108614][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 84% 
2021-02-15 15:59:39,606 [ 108627][JobScheduler FJ pool 0/2]   INFO - on.cache.ComposerPackagesCache - Composer packages cache /root/.cache/idea/composer_packages/composer-cache.json was not found 
2021-02-15 15:59:39,611 [ 108632][JobScheduler FJ pool 0/2]   INFO - on.cache.ComposerPackagesCache - Composer packages cache /root/.cache/idea/composer_packages/composer-cache.json was not found 
2021-02-15 15:59:39,628 [ 108649][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 86% 
2021-02-15 15:59:41,335 [ 110356][ApplicationImpl pooled thread 3]   INFO -                         STDOUT - Analyzing code 87% 
2021-02-15 15:59:41,372 [ 110393][DefaultDispatcher-worker-3]   INFO - syncInspectionToolResultWriter - Async result writer finished 
2021-02-15 15:59:41,448 [ 110469][ApplicationImpl pooled thread 3]   INFO - oader.EventLogExternalUploader - Started external process for uploading event log 
2021-02-15 15:59:41,468 [ 110489][AWT-EventQueue-0]   INFO - org.jetbrains.io.BuiltInServer - web server stopped 
2021-02-15 15:59:41,478 [ 110499][AWT-EventQueue-0]   INFO - .impl.FileTypeDetectionService - 1221 auto-detected files. Detection took 314 ms 
2021-02-15 15:59:41,497 [ 110518][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - START INDEX SHUTDOWN 
2021-02-15 15:59:41,542 [ 110563][AWT-EventQueue-0]   INFO - tellij.psi.stubs.StubIndexImpl - StubIndexExtension-s were unloaded 
2021-02-15 15:59:41,610 [ 110631][AWT-EventQueue-0]   INFO - il.indexing.FileBasedIndexImpl - END INDEX SHUTDOWN 
2021-02-15 15:59:41,610 [ 110631][AWT-EventQueue-0]   INFO - newvfs.persistent.PersistentFS - VFS dispose started 
2021-02-15 15:59:41,626 [ 110647][AWT-EventQueue-0]   INFO - newvfs.persistent.PersistentFS - VFS dispose completed 
2021-02-15 15:59:41,627 [ 110648][AWT-EventQueue-0]   INFO - stubs.SerializationManagerImpl - Start shutting down /root/.cache/idea/index/rep.names 
2021-02-15 15:59:41,627 [ 110648][AWT-EventQueue-0]   INFO - stubs.SerializationManagerImpl - Finished shutting down /root/.cache/idea/index/rep.names 
2021-02-15 15:59:41,647 [ 110668][AWT-EventQueue-0]   INFO - plication.impl.ApplicationImpl - Write action Statistics:
Event number:     40
Total time spent: 7763ms
Average duration: 194ms
Median  duration: 1ms
Max     duration: 4797ms (it was 'write action (class org.jetbrains.kotlin.idea.core.script.ScriptDefinitionsManager$updateDefinitions$2$$special$$inlined$runWriteAction$1)') 
2021-02-15 15:59:41,647 [ 110668][AWT-EventQueue-0]   INFO - plication.impl.ApplicationImpl - AnAction.update() Statistics:
Event number:     0
Total time spent: 0ms
Average duration: 0ms
Median  duration: 0ms
Max     duration: 0ms (it was 'null') 
2021-02-15 15:59:41,652 [ 110673][AWT-EventQueue-0]   INFO - plication.impl.ApplicationImpl - Global instance threads created counter = 10; ProcessIOExecutorService threads: 0 
2021-02-15 15:59:41,680 [ 110701][Shutdown tracker]   INFO -        #com.intellij.idea.Main - ------------------------------------------------------ IDE SHUTDOWN ------------------------------------------------------ 
2021-02-15 15:59:41,695 [ 110716][Shutdown tracker]   INFO - org.jetbrains.io.BuiltInServer - web server stopped 
